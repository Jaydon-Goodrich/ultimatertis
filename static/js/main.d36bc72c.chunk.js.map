{"version":3,"sources":["gameHelpers.js","components/styles/StyledTetris.js","tetrominos.js","hooks/useStage.js","components/styles/StyledStage.js","components/styles/StyledCell.js","components/Cell.js","components/Stage.js","components/styles/StyledDisplay.js","components/Display.js","components/styles/StyledStartButton.js","components/StartButton.js","components/Tetris.js","hooks/usePlayer.js","hooks/useGameStatus.js","hooks/useInterval.js","App.js","serviceWorker.js","index.js"],"names":["createStage","Array","from","fill","checkCollision","player","stage","_ref","moveX","x","moveY","y","tetromino","length","pos","StyledTetrisWrapper","styled","div","_templateObject","StyledTetris","_templateObject2","TETROMINOS","0","shape","color","I","J","L","O","S","T","Z","P","E","A","B","C","randomTetromino","randTetromino","Math","floor","random","useStage","resetPlayer","_useState","useState","_useState2","Object","slicedToArray","setStage","_useState3","_useState4","rowsCleared","setRowsCleared","useEffect","updateStage","prevStage","newStage","map","row","cell","forEach","value","concat","collided","reduce","acc","findIndex","prev","unshift","push","sweepRows","StyledStage","StyledStage_templateObject","props","height","width","StyledCell","StyledCell_templateObject","type","React","memo","react_default","a","createElement","Stage","components_Cell","key","StyledDisplay","StyledDisplay_templateObject","gameOver","Display","text","StyledStartButton","button","StyledStartButton_templateObject","StartButton","callback","onClick","Tetris","dropTime","setDropTime","setGameOver","_usePlayer","setPlayer","rotate","matrix","dir","rotatedTetro","_","index","col","reverse","useCallback","STAGE_WIDTH","objectSpread2","clonedPlayer","JSON","parse","stringify","offset","usePlayer","_usePlayer2","updatePlayerPos","playerRotate","_useStage","_useStage2","_useGameStatus","score","setScore","rows","setRows","_useState5","_useState6","level","setLevel","linePoints","calcScore","useGameStatus","_useGameStatus2","console","log","movePlayer","drop","move","_ref2","keyCode","delay","savedCallback","useRef","current","id","setInterval","clearInterval","useInterval","role","tabIndex","onKeyDown","e","onKeyUp","components_Stage","components_Display","components_StartButton","App","className","components_Tetris","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d36bc72c.chunk.js","sourcesContent":["export const STAGE_WIDTH = 12;\nexport const STAGE_HEIGHT = 20;\n\nexport const createStage = () => \n    Array.from(Array(STAGE_HEIGHT), () =>\n        new Array(STAGE_WIDTH).fill([0, 'clear'])\n    )\n\nexport const checkCollision = (player, stage, { x: moveX, y: moveY }) => {\n    for (let y = 0; y < player.tetromino.length; y += 1){\n        for(let x = 0; x < player.tetromino[y].length; x += 1){\n            if(player.tetromino[y][x] !== 0){\n                if(\n                !stage[y + player.pos.y + moveY] || \n                !stage[y + player.pos.y + moveY][x + player.pos.x + moveX] ||\n                stage[y + player.pos.y + moveY][x + player.pos.x + moveX][1] !== 'clear'\n                ){\n                    return true;\n                }\n            }\n        }\n    }\n}","import styled from 'styled-components';\n\nexport const StyledTetrisWrapper = styled.div`\n    width: 100vh;\n    height: 100vh;\n    \n`\n\nexport const StyledTetris = styled.div`\n    display: flex;\n    align-items: flex-start;\n    padding: 40px;\n    margin: 0 auto;\n    max-width: 900px;\n\n    aside {\n        width: 100%;\n        max-width: 200px;\n        display: block;\n        padding: 0 20px;\n    }\n`","export const TETROMINOS = {\n    0: {\n        shape: [[0]],\n        color: '0, 0, 0'\n    },\n    I: {\n        shape: [\n            [0, 'I', 0, 0],\n            [0, 'I', 0, 0],\n            [0, 'I', 0, 0],\n            [0, 'I', 0, 0]\n        ],\n        color: '80, 227, 230'\n    },\n    J: {\n        shape: [\n            [0, 'J', 0],\n            [0, 'J', 0],\n            ['J', 'J', 0]\n        ],\n        color: '36, 95, 223'\n    },\n    L: {\n        shape: [\n            [0, 'L', 0],\n            [0, 'L', 0],\n            [0, 'L', 'L']\n        ],\n        color: '223, 173, 36'\n    },\n    O: {\n        shape: [\n            ['O', 'O'],\n            ['O', 'O'],\n        ],\n        color: '223, 217, 36'\n    },\n    S: {\n        shape: [\n            [0, 'S', 'S'],\n            ['S', 'S', 0],\n            [0, 0, 0]\n        ],\n        color: '48, 211, 56'\n    },\n    T: {\n        shape: [\n            [0, 0, 0],\n            ['T', 'T', 'T'],\n            [0, 'T', 0]\n        ],\n        color: '132, 61, 198'\n    },\n    Z: {\n        shape: [\n            ['Z', 'Z', 0],\n            [0, 'Z', 'Z'],\n            [0, 0, 0]\n        ],\n        color: '227, 78, 78'\n    },\n    P: {\n        shape: [\n            [0, 'P', 0],\n            ['P', 'P', 'P'],\n            [0, 'P', 0]\n        ],\n        color: '255, 255, 255'\n    },\n    E: {\n        shape: [\n            [0, 0, 0],\n            [0, 'E', 0],\n            [0, 0, 0],\n        ],\n        color: '213, 101, 219'\n    },\n    A: {\n        shape: [\n            [0, 0, 0],\n            ['A', 0, 'A'],\n            ['A', 'A', 'A'],\n        ],\n        color: '255, 178, 54'\n    },\n    B: {\n        shape: [\n            ['B', 'B', 'B'],\n            ['B', 0, 'B'],\n            ['B', 'B', 'B'],\n        ],\n        color: '115, 0, 255'\n    },\n    C: {\n        shape: [\n            ['C', 0, 'C'],\n            [0, 'C', 0],\n            ['C', 0, 'C'],\n        ],\n        color: '115, 0, 255'\n    },\n\n}\n\nexport const randomTetromino = () => {\n    const tetrominos = 'IJLOSTZPEABC';\n    const randTetromino = \n        tetrominos[Math.floor(Math.random() * tetrominos.length)];\n\n    return TETROMINOS[randTetromino];\n}","import { useState, useEffect } from 'react';\nimport { createStage } from '../gameHelpers';\n\nexport const useStage = (player, resetPlayer) => {\n    const [stage, setStage] = useState(createStage());\n    const [rowsCleared, setRowsCleared] = useState(0);\n\n    useEffect(() => {\n        setRowsCleared(0);\n\n        const sweepRows = newStage => \n            newStage.reduce((acc, row) => {\n                if(row.findIndex(cell => cell[0] === 0) === -1){\n                    setRowsCleared(prev => prev + 1);\n                    acc.unshift(new Array(newStage[0].length).fill([0, 'clear']));\n                    return acc;\n                }\n                acc.push(row);\n                return acc;\n            }, [])\n        const updateStage = prevStage => {\n            const newStage = prevStage.map(row =>\n                row.map(cell => (cell[1] === 'clear' ? [0, 'clear'] : cell)),\n            );\n\n            player.tetromino.forEach((row, y) => {\n                row.forEach((value, x) => {\n                    if (value !== 0) {\n                        newStage[y + player.pos.y][x + player.pos.x] = [\n                            value,\n                            `${player.collided ? 'merged' : 'clear'}`,\n                        ];\n                    }\n                });\n            });\n\n            if(player.collided){\n                resetPlayer();\n                return sweepRows(newStage);\n            }\n\n            return newStage;\n        };\n\n        setStage(prev => updateStage(prev))\n    }, [player, resetPlayer]);\n\n    return [stage, setStage, rowsCleared];\n}","import styled from 'styled-components';\n\nexport const StyledStage = styled.div`\n    display: grid;\n    grid-template-rows: repeat(\n        ${props => props.height},\n        calc(25vw / ${props => props.width})\n    );\n    grid-template-columns: repeat(${props => props.width}, 1fr);\n    grid-gap: 1px;\n    border: 2px solid #333;\n    width: 100%;\n    max-width: 25vw;\n    background: #111;\n`","import styled from 'styled-components';\n\nexport const StyledCell = styled.div`\n    width: auto;\n    background: rgba(${props => props.color}, 0.8);\n    border: ${props => (props.type === 0 ? '0px solid' : '4px solid')};\n    border-bottom-color: rgba(${props => props.color}, 0.1);\n    border-right-color: rgba(${props => props.color}, 1);\n    border-top-color: rgba(${props => props.color}, 1);\n    border-left-color: rgba(${props => props.color}, 0.3);\n`","import React from 'react';\nimport { StyledCell } from './styles/StyledCell';\nimport { TETROMINOS } from '../tetrominos';\n\nconst Cell = ({ type }) => (\n  <StyledCell type={type} color={TETROMINOS[type].color} />\n)\n\nexport default React.memo(Cell);","import React from 'react';\nimport { StyledStage } from './styles/StyledStage';\n\n\nimport Cell from './Cell';\n\nconst Stage = ({ stage }) => (\n  <StyledStage width={stage[0].length} height={stage.length}>\n    {stage.map(row => row.map((cell, x) => <Cell key={x} type={cell[0]} />))}\n  </StyledStage>\n);\n\nexport default Stage;\n","import styled from 'styled-components';\n\nexport const StyledDisplay = styled.div`\n    box-sizing: border-box;\n    display: flex;\n    align-items: center;\n    margin: 0 0 20px 0;\n    padding: 20px;\n    border: 4px solid #333;\n    min-height: 30px;\n    width: 100%;\n    border-radius: 20px;\n    color: ${props => (props.gameOver ? 'red' : '#999')};\n    background: #000;\n    font-size: 0.8rem;\n`","import React from 'react';\n\nimport { StyledDisplay} from './styles/StyledDisplay';\n\nconst Display = ({ gameOver, text }) => (\n  <StyledDisplay gameOver={gameOver}>{text}</StyledDisplay>\n)\n\nexport default Display;","import styled from 'styled-components';\n\nexport const StyledStartButton = styled.button`\n    box-sizing: border-box;\n    margin: 0 0 20px 0;\n    padding: 20px;\n    min-height: 30px;\n    width: 100%;\n    border-radius: 20px;\n    border: none;\n    color: white;\n    background: #333;\n    font-size: 1rem;\n    outline: none;\n    cursor: pointer;\n`","import React from 'react';\nimport { StyledStartButton } from './styles/StyledStartButton';\n\nconst StartButton = ({ callback }) => (\n  <StyledStartButton onClick={callback}>Start Game</StyledStartButton>\n)\n\nexport default StartButton;","import React, { useState } from 'react';\n\nimport { createStage, checkCollision } from '../gameHelpers';\n\n//styles\nimport { StyledTetrisWrapper, StyledTetris } from './styles/StyledTetris';\n\n//custom hooks\nimport { useInterval } from '../hooks/useInterval';\nimport { usePlayer } from '../hooks/usePlayer';\nimport { useStage } from '../hooks/useStage';\nimport { useGameStatus } from '../hooks/useGameStatus';\n\n// Components\nimport Stage from './Stage';\nimport Display from './Display';\nimport StartButton from './StartButton';\n\nconst Tetris = () => {\n\n  const [dropTime, setDropTime] = useState(null);\n  const [gameOver, setGameOver] = useState(false);\n\n  const [player, updatePlayerPos, resetPlayer, playerRotate] = usePlayer();\n  const [stage, setStage, rowsCleared] = useStage(player, resetPlayer);\n  const [score, setScore, rows, setRows, level, setLevel] = useGameStatus(rowsCleared);\n  console.log(\"re-render\");\n\n  const movePlayer = dir => {\n    if(!checkCollision(player, stage, { x: dir, y: 0})){\n      updatePlayerPos({ x: dir, y: 0 });\n    }\n  }\n\n  const startGame = () => {\n    console.log(\"Test\");\n    setStage(createStage());\n    setDropTime(1000);\n    resetPlayer();\n    setGameOver(false);\n    setScore(0);\n    setRows(0);\n    setLevel(0);\n  }\n\n  const drop = () => {\n    //increase level when players clears 10 rows\n    if(rows > (level + 1) * 10){\n      setLevel(prev => prev + 1);\n\n      setDropTime(1000 / (level + 1) + 200);\n    }\n    if(!checkCollision(player, stage, { x: 0, y: 1})){\n      updatePlayerPos({x: 0, y: 1, collided: false })\n    }\n    else{\n      if(player.pos.y < 1){\n        console.log(\"GAME OVER\");\n        setGameOver(true);\n        setDropTime(null);\n      }\n      updatePlayerPos({ x: 0, y:0, collided: true });\n    }\n  }\n\n  const keyUp = ({ keyCode }) => {\n    if(!gameOver){\n      if(keyCode === 40) {\n        setDropTime(1000 / (level + 1) + 200);\n      }\n    }\n  }\n  \n  const dropPlayer = () => {\n    setDropTime(null);\n    drop();\n  }\n\n  const move = ({ keyCode }) => {\n    if(!gameOver){\n      if(keyCode === 37) {\n        movePlayer(-1);\n      }\n      else if(keyCode === 39){\n        movePlayer(1);\n      }\n      else if(keyCode === 40){\n        dropPlayer();\n      }\n      else if(keyCode === 38){\n        playerRotate(stage, 1);\n      }\n    }\n  }\n\n  useInterval(() => {\n    drop();\n  }, dropTime);\n\n\n  return (\n    <StyledTetrisWrapper role=\"button\" tabIndex=\"0\" onKeyDown={e => move(e)} onKeyUp={keyUp}>\n      <StyledTetris>\n      <Stage stage={stage}/>\n      <aside>\n        {gameOver ? (\n          <Display gameOver={gameOver} text=\"Game Over\" />\n        ) : (\n        <div>\n          <Display text={`Score: ${score}`} />\n          <Display text={`Rows: ${rows}`} />\n          <Display text={`Level: ${level}`} />\n        </div>\n        )}\n        <StartButton callback={startGame}/>\n      </aside>\n      </StyledTetris>\n    </StyledTetrisWrapper>\n  );\n};\n\nexport default Tetris;\n","import { useCallback, useState } from 'react';\nimport { checkCollision, STAGE_WIDTH } from '../gameHelpers';\n\nimport { TETROMINOS, randomTetromino } from '../tetrominos';\n\nexport const usePlayer = () => {\n    const [player, setPlayer] = useState({\n        pos: { x:0, y:0 },\n        tetromino: TETROMINOS[0].shape,\n        collided: false,\n    });\n\n    const rotate = (matrix, dir) => {\n        //Make rows become cols\n        const rotatedTetro = matrix.map((_, index) =>\n            matrix.map(col => col[index]),\n        );\n\n        if(dir > 0) return rotatedTetro.map(row => row.reverse());\n        return rotatedTetro.reverse();\n    };\n\n    const playerRotate = (stage, dir) => {\n        const clonedPlayer = JSON.parse(JSON.stringify(player));\n        clonedPlayer.tetromino = rotate(clonedPlayer.tetromino, dir);\n\n        const pos = clonedPlayer.pos.x;\n        let offset = 1;\n        while(checkCollision(clonedPlayer, stage, {x: 0, y: 0})){\n            clonedPlayer.pos.x += offset;\n            offset = -(offset + (offset > 0 ? 1 : -1));\n            if(offset > clonedPlayer.tetromino[0].length){\n                rotate(clonedPlayer.tetromino, -dir);\n                clonedPlayer.pos.x = pos;\n                return;\n            }\n        }\n\n        setPlayer(clonedPlayer);\n    }\n\n    const updatePlayerPos = ({ x, y, collided }) => {\n        setPlayer(prev => ({\n            ...prev,\n            pos: { x: (prev.pos.x += x), y: (prev.pos.y += y)},\n            collided,\n        }))\n    }\n\n    const resetPlayer = useCallback(() => {\n        setPlayer({\n            pos: { x: STAGE_WIDTH / 2 - 2, y: 0 },\n            tetromino: randomTetromino().shape,\n            collided: false\n        })\n    }, [])\n\n    return [player, updatePlayerPos, resetPlayer, playerRotate];\n}\n","import { useState, useEffect, useCallback } from 'react';\n\nexport const useGameStatus = rowsCleared => {\n  const [score, setScore] = useState(0);\n  const [rows, setRows] = useState(0);\n  const [level, setLevel] = useState(0);\n\n  const linePoints = [40, 100, 300, 1200];\n\n  const calcScore = useCallback(() => {\n    // We have score\n    if (rowsCleared > 0) {\n      // This is how original Tetris score is calculated\n      setScore(prev => prev + linePoints[rowsCleared - 1] * (level + 1));\n      setRows(prev => prev + rowsCleared);\n    }\n  }, [level, linePoints, rowsCleared]);\n\n  useEffect(() => {\n    calcScore();\n  }, [calcScore, rowsCleared, score]);\n\n  return [score, setScore, rows, setRows, level, setLevel];\n};\n","import { useEffect, useRef } from 'react';\n\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef();\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      const id = setInterval(tick, delay);\n      return () => {\n        clearInterval(id);\n      };\n    }\n  }, [delay]);\n}\n","import React from 'react';\nimport Tetris from './components/Tetris';\n\nconst App = () => (\n  <div className=\"App\">\n    <Tetris />\n  </div>\n);\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}